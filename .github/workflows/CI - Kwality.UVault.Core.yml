# ======================================================================================================================
# == LICENSE:       Copyright (c) 2023 Kevin De Coninck
# ==
# ==                Permission is hereby granted, free of charge, to any person
# ==                obtaining a copy of this software and associated documentation
# ==                files (the "Software"), to deal in the Software without
# ==                restriction, including without limitation the rights to use,
# ==                copy, modify, merge, publish, distribute, sublicense, and/or sell
# ==                copies of the Software, and to permit persons to whom the
# ==                Software is furnished to do so, subject to the following
# ==                conditions:
# ==
# ==                The above copyright notice and this permission notice shall be
# ==                included in all copies or substantial portions of the Software.
# ==
# ==                THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
# ==                EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES
# ==                OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
# ==                NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT
# ==                HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,
# ==                WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
# ==                FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
# ==                OTHER DEALINGS IN THE SOFTWARE.
# ======================================================================================================================
name: CI (Continuous Integration)`
run-name: "CI (Continuous Integration) @ \u0022${{ github.ref_name }}\u0022"

on:
  pull_request:
    paths:
      - 'app/Kwality.UVault.Core'
  workflow_dispatch:

concurrency:
  group: auth0

jobs:
  build:
    name: Build `${{ matrix.projects }}` on ${{ matrix.os }} using .NET ${{ matrix.dotnet }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ ubuntu-latest ]
        dotnet: [ '6.0.419', '7.0.406', '8.0.201' ]
        projects: [ 'app/Kwality.UVault.Core', 'app/Kwality.UVault.Core.Auth0', 'app/Kwality.UVault.Core.Auth0.QA', 'app/Kwality.UVault.APIs', 'app/Kwality.UVault.APIs.Auth0', 'app/Kwality.UVault.APIs.QA', 'app/Kwality.UVault.APIs.Auth0.QA', 'app/Kwality.UVault.IAM', 'app/Kwality.UVault.IAM.QA', 'app/Kwality.UVault.Grants', 'app/Kwality.UVault.Grants.Auth0', 'app/Kwality.UVault.Grants.QA', 'app/Kwality.UVault.Grants.Auth0.QA', 'app/Kwality.UVault.M2M', 'app/Kwality.UVault.M2M.Auth0', 'app/Kwality.UVault.M2M.QA', 'app/Kwality.UVault.M2M.Auth0.QA', 'app/Kwality.UVault.Users', 'app/Kwality.UVault.Users.Auth0', 'app/Kwality.UVault.Users.QA', 'app/Kwality.UVault.Users.Auth0.QA', 'app/Kwality.UVault.QA.Common' ]

    steps:
      - name: GIT Clone
        uses: actions/checkout@v4

      - name: Setup .NET ${{ matrix.dotnet }}
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: ${{ matrix.dotnet }}

      - name: Restore NuGet packages
        working-directory: ${{ matrix.projects }}
        run: dotnet restore

      - name: Build project
        working-directory: ${{ matrix.projects }}
        run: dotnet build --no-incremental --no-restore /p:CIBuild=true

  analyze:
    name: Analyze `${{ matrix.projects }}` on ${{ matrix.os }} using .NET ${{ matrix.dotnet }}
    needs: [ build ]
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ windows-latest ]
        dotnet: [ '6.0.419', '7.0.406', '8.0.201' ]
        projects: [ 'app/Kwality.UVault.Core', 'app/Kwality.UVault.Core.Auth0', 'app/Kwality.UVault.Core.Auth0.QA', 'app/Kwality.UVault.APIs', 'app/Kwality.UVault.APIs.Auth0', 'app/Kwality.UVault.APIs.QA', 'app/Kwality.UVault.APIs.Auth0.QA', 'app/Kwality.UVault.IAM', 'app/Kwality.UVault.IAM.QA', 'app/Kwality.UVault.Grants', 'app/Kwality.UVault.Grants.Auth0', 'app/Kwality.UVault.Grants.QA', 'app/Kwality.UVault.Grants.Auth0.QA', 'app/Kwality.UVault.M2M', 'app/Kwality.UVault.M2M.Auth0', 'app/Kwality.UVault.M2M.QA', 'app/Kwality.UVault.M2M.Auth0.QA', 'app/Kwality.UVault.Users', 'app/Kwality.UVault.Users.Auth0', 'app/Kwality.UVault.Users.QA', 'app/Kwality.UVault.Users.Auth0.QA', 'app/Kwality.UVault.QA.Common' ]

    steps:
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: 'zulu'

      - name: GIT Clone
        uses: actions/checkout@v4

      - name: Setup .NET ${{ matrix.dotnet }}
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: ${{ matrix.dotnet }}

      - name: Install SonarCloud scanner
        run: dotnet tool install -g dotnet-sonarscanner

      - name: Install Code Coverage tool
        run: dotnet tool install -g dotnet-coverage

      - name: Restore NuGet packages
        working-directory: ${{ matrix.projects }}
        run: dotnet restore

      - name: Build and analyze
        working-directory: ${{ matrix.projects }}
        env:
          AUTH0_TOKEN_ENDPOINT: ${{ secrets.AUTH0_TOKEN_ENDPOINT }}
          AUTH0_USERNAME: ${{ secrets.AUTH0_USERNAME }}
          AUTH0_PASSWORD: ${{ secrets.AUTH0_PASSWORD }}
          AUTH0_AUDIENCE: ${{ secrets.AUTH0_AUDIENCE }}
          AUTH0_VALID_AUDIENCE: ${{ secrets.AUTH0_VALID_AUDIENCE }}
          AUTH0_VALID_ISSUER: ${{ secrets.AUTH0_VALID_ISSUER }}
          AUTH0_CLIENT_ID: ${{ secrets.AUTH0_CLIENT_ID }}
          AUTH0_CLIENT_SECRET: ${{ secrets.AUTH0_CLIENT_SECRET }}
          AUTH0_TEST_APPLICATION_1_CLIENT_ID: ${{ secrets.AUTH0_TEST_APPLICATION_1_CLIENT_ID }}
          AUTH0_TEST_APPLICATION_2_CLIENT_ID: ${{ secrets.AUTH0_TEST_APPLICATION_2_CLIENT_ID }}
        shell: powershell
        run: |
          dotnet-sonarscanner begin /k:"dotnet-essentials_Kwality.UVault" /o:"dotnet-essentials" /d:sonar.login="${{ secrets.SONAR_TOKEN }}" /d:sonar.host.url="https://sonarcloud.io" /d:sonar.cs.vscoveragexml.reportsPaths=coverage.xml
          dotnet clean
          dotnet restore
          dotnet build --no-incremental --no-restore
          dotnet-coverage collect "dotnet test" -f xml -o "coverage.xml"
          dotnet-sonarscanner end /d:sonar.login="${{ secrets.SONAR_TOKEN }}"

  # test-non-auth0-projects:
  #   name: Test `${{ matrix.projects }}` on ${{ matrix.os }} using .NET ${{ matrix.dotnet }}
  #   needs: [ build ]
  #   runs-on: ${{ matrix.os }}
  #   strategy:
  #     matrix:
  #       os: [ ubuntu-latest ]
  #       dotnet: [ '6.0.419', '7.0.406', '8.0.201' ]
  #       projects: [ 'app/Kwality.UVault.APIs.QA',  'app/Kwality.UVault.Grants.QA', 'app/Kwality.UVault.M2M.QA', 'app/Kwality.UVault.Users.QA' ]

  #   steps:
  #     - name: GIT Clone
  #       uses: actions/checkout@v4

  #     - name: Setup .NET ${{ matrix.dotnet }}
  #       uses: actions/setup-dotnet@v3
  #       with:
  #         dotnet-version: ${{ matrix.dotnet }}

  #     - name: Restore NuGet packages
  #       working-directory: ${{ matrix.projects }}
  #       run: dotnet restore

  #     - name: Build project
  #       working-directory: ${{ matrix.projects }}
  #       run: dotnet build --no-incremental --no-restore

  #     - name: Test
  #       working-directory: ${{ matrix.projects }}
  #       run: dotnet test --no-build --no-restore

  # test-auth0-projects:
  #   name: Test `${{ matrix.projects }}` on ${{ matrix.os }} using .NET ${{ matrix.dotnet }}
  #   needs: [ build ]
  #   runs-on: ${{ matrix.os }}
  #   strategy:
  #     matrix:
  #       os: [ ubuntu-latest ]
  #       dotnet: [ '6.0.419', '7.0.406', '8.0.201' ]
  #       projects: [ 'app/Kwality.UVault.Core.Auth0.QA', 'app/Kwality.UVault.APIs.Auth0.QA', 'app/Kwality.UVault.IAM.QA', 'app/Kwality.UVault.Grants.Auth0.QA', 'app/Kwality.UVault.M2M.Auth0.QA', 'app/Kwality.UVault.Users.Auth0.QA' ]
  #     max-parallel: 1

  #   steps:
  #     - name: GIT Clone
  #       uses: actions/checkout@v4

  #     - name: Setup .NET ${{ matrix.dotnet }}
  #       uses: actions/setup-dotnet@v3
  #       with:
  #         dotnet-version: ${{ matrix.dotnet }}

  #     - name: Restore NuGet packages
  #       working-directory: ${{ matrix.projects }}
  #       run: dotnet restore

  #     - name: Build project
  #       working-directory: ${{ matrix.projects }}
  #       run: dotnet build --no-incremental --no-restore

  #     - name: Test
  #       working-directory: ${{ matrix.projects }}
  #       env:
  #         AUTH0_TOKEN_ENDPOINT: ${{ secrets.AUTH0_TOKEN_ENDPOINT }}
  #         AUTH0_USERNAME: ${{ secrets.AUTH0_USERNAME }}
  #         AUTH0_PASSWORD: ${{ secrets.AUTH0_PASSWORD }}
  #         AUTH0_AUDIENCE: ${{ secrets.AUTH0_AUDIENCE }}
  #         AUTH0_VALID_AUDIENCE: ${{ secrets.AUTH0_VALID_AUDIENCE }}
  #         AUTH0_VALID_ISSUER: ${{ secrets.AUTH0_VALID_ISSUER }}
  #         AUTH0_CLIENT_ID: ${{ secrets.AUTH0_CLIENT_ID }}
  #         AUTH0_CLIENT_SECRET: ${{ secrets.AUTH0_CLIENT_SECRET }}
  #         AUTH0_TEST_APPLICATION_1_CLIENT_ID: ${{ secrets.AUTH0_TEST_APPLICATION_1_CLIENT_ID }}
  #         AUTH0_TEST_APPLICATION_2_CLIENT_ID: ${{ secrets.AUTH0_TEST_APPLICATION_2_CLIENT_ID }}
  #       run: dotnet test --no-build --no-restore --filter Target="Auth0" --logger trx --results-directory "TestResults-${{ matrix.projects }}-${{ matrix.os }}-${{ matrix.dotnet }}"

  #     - name: Upload test result
  #       uses: actions/upload-artifact@v3
  #       if: steps.check_dir.outputs.dir_exists == 'true'
  #       with:
  #         name: Test results (`${{ matrix.projects }}` on ${{ matrix.os }} using .NET ${{ matrix.dotnet }})
  #         path: ./app/TestResults-${{ matrix.projects }}-${{ matrix.os }}-${{ matrix.dotnet }}

  mutate:
    name: Mutate `${{ matrix.projects }}` on ${{ matrix.os }} using .NET ${{ matrix.dotnet }}
    needs: [ analyze ]
    runs-on: ubuntu-latest
    strategy:
      matrix:
        os: [ ubuntu-latest ]
        dotnet: [ '6.0.419', '7.0.406', '8.0.201' ]
        projects: [ 'app/Kwality.UVault.Core', 'app/Kwality.UVault.Core.Auth0', 'app/Kwality.UVault.APIs', 'app/Kwality.UVault.APIs.Auth0', 'app/Kwality.UVault.IAM', 'app/Kwality.UVault.Grants', 'app/Kwality.UVault.Grants.Auth0', 'app/Kwality.UVault.M2M', 'app/Kwality.UVault.M2M.Auth0', 'app/Kwality.UVault.Users', 'app/Kwality.UVault.Users.Auth0' ]
      max-parallel: 1
    steps:
      - name: GIT Clone
        uses: actions/checkout@v4

      - name: Setup .NET ${{ matrix.dotnet }}
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: ${{ matrix.dotnet }}

      - name: Restore NuGet packages
        working-directory: ${{ matrix.projects }}
        run: dotnet restore

      - name: Build project
        working-directory: ${{ matrix.projects }}
        run: dotnet build --no-incremental --no-restore

      - name: Install Stryker.NET
        run: dotnet tool install -g dotnet-stryker

      - name: Mutate `${{ matrix.projects }}` on ${{ matrix.os }} using .NET ${{ matrix.dotnet }}
        working-directory: ${{ matrix.projects }}
        env:
          AUTH0_TOKEN_ENDPOINT: ${{ secrets.AUTH0_TOKEN_ENDPOINT }}
          AUTH0_USERNAME: ${{ secrets.AUTH0_USERNAME }}
          AUTH0_PASSWORD: ${{ secrets.AUTH0_PASSWORD }}
          AUTH0_AUDIENCE: ${{ secrets.AUTH0_AUDIENCE }}
          AUTH0_VALID_AUDIENCE: ${{ secrets.AUTH0_VALID_AUDIENCE }}
          AUTH0_VALID_ISSUER: ${{ secrets.AUTH0_VALID_ISSUER }}
          AUTH0_CLIENT_ID: ${{ secrets.AUTH0_CLIENT_ID }}
          AUTH0_CLIENT_SECRET: ${{ secrets.AUTH0_CLIENT_SECRET }}
          AUTH0_TEST_APPLICATION_1_CLIENT_ID: ${{ secrets.AUTH0_TEST_APPLICATION_1_CLIENT_ID }}
          AUTH0_TEST_APPLICATION_2_CLIENT_ID: ${{ secrets.AUTH0_TEST_APPLICATION_2_CLIENT_ID }}
        run: dotnet stryker --config-file ../stryker-config.json --project ${{ matrix.projects }}.csproj --output StrykerOutput-${{ matrix.os }}-${{ matrix.dotnet }}

      - name: Upload mutation results.
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: Mutation results (`${{ matrix.projects }}` on ${{ matrix.os }} using .NET ${{ matrix.dotnet }})
          path: app/${{ matrix.projects }}/StrykerOutput-${{ matrix.os }}-${{ matrix.dotnet }}
