# ======================================================================================================================
# == LICENSE:       Copyright (c) 2023 Kevin De Coninck
# ==
# ==                Permission is hereby granted, free of charge, to any person
# ==                obtaining a copy of this software and associated documentation
# ==                files (the "Software"), to deal in the Software without
# ==                restriction, including without limitation the rights to use,
# ==                copy, modify, merge, publish, distribute, sublicense, and/or sell
# ==                copies of the Software, and to permit persons to whom the
# ==                Software is furnished to do so, subject to the following
# ==                conditions:
# ==
# ==                The above copyright notice and this permission notice shall be
# ==                included in all copies or substantial portions of the Software.
# ==
# ==                THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
# ==                EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES
# ==                OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
# ==                NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT
# ==                HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,
# ==                WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
# ==                FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
# ==                OTHER DEALINGS IN THE SOFTWARE.
# ======================================================================================================================

# GENERAL INFORMATION.
name: Continuous integration (Auth0)
run-name: "Continuous integration (branch: \u0022${{ github.ref_name }}\u0022)"

# To ensure that we don't face Auth0's "Rate Limit", we prevent that this action runs concurrently.
concurrency:
  group: kwality.uvault

# TRIGGER(S).
on:
  workflow_dispatch:
  schedule:
    - cron: '0 0 * * *' # Run at the end of each day.

# JOBS.
jobs:
  build-and-test:
    name: Build and test on ${{ matrix.os }} using .NET ${{ matrix.dotnet }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ ubuntu-latest ]
        dotnet: [ '6.0.27', '7.0.16', '8.0.2' ]
    steps:
      - name: GIT Clone
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Setup .NET ${{ matrix.dotnet }}
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: ${{ matrix.dotnet }}

      - name: Restore NuGet packages
        working-directory: ./app/
        run: dotnet restore

      - name: Build .NET Solution
        working-directory: ./app/
        run: dotnet build --no-incremental --no-restore /p:CIBuild=true

      - name: Run tests
        working-directory: ./app/
        env:
          AUTH0_TOKEN_ENDPOINT: ${{ secrets.AUTH0_TOKEN_ENDPOINT }}
          AUTH0_USERNAME: ${{ secrets.AUTH0_USERNAME }}
          AUTH0_PASSWORD: ${{ secrets.AUTH0_PASSWORD }}
          AUTH0_AUDIENCE: ${{ secrets.AUTH0_AUDIENCE }}
          AUTH0_VALID_AUDIENCE: ${{ secrets.AUTH0_VALID_AUDIENCE }}
          AUTH0_VALID_ISSUER: ${{ secrets.AUTH0_VALID_ISSUER }}
          AUTH0_CLIENT_ID: ${{ secrets.AUTH0_CLIENT_ID }}
          AUTH0_CLIENT_SECRET: ${{ secrets.AUTH0_CLIENT_SECRET }}
          AUTH0_TEST_APPLICATION_1_CLIENT_ID: ${{ secrets.AUTH0_TEST_APPLICATION_1_CLIENT_ID }}
          AUTH0_TEST_APPLICATION_2_CLIENT_ID: ${{ secrets.AUTH0_TEST_APPLICATION_2_CLIENT_ID }}
        run: dotnet test --no-build --no-restore --filter Target="Auth0" --logger trx --results-directory "TestResults-${{ matrix.dotnet }}"

      - name: Check if directory containing test results does exist.
        id: check_dir
        run: |
          if [ -d "./app/TestResults-${{ matrix.dotnet }}" ]; then
            echo "dir_exists=true" >> $GITHUB_OUTPUT
          else
            echo "dir_exists=false" >> $GITHUB_OUTPUT
          fi

      - name: Upload test results.
        uses: actions/upload-artifact@v3
        if: steps.check_dir.outputs.dir_exists == 'true'
        with:
          name: Test results (.NET ${{ matrix.dotnet }})
          path: ./app/TestResults-${{ matrix.dotnet }}
